services:
  postgres:
    image: postgres:14
    networks:
      - my_network
    volumes:
      - ./docker-airflow/pg-init-scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5434:5432"

  webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    command: webserver
    entrypoint: ["/opt/airflow/script/entrypoint.sh"]
    restart: always
    depends_on:
      - postgres
    environment:
      - LOAD_EX=n
      - EXECUTOR=Sequential
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
      - ./requirements.txt:/opt/airflow/requirements.txt
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - my_network

  scheduler:
    image: apache/airflow:2.6.0-python3.9
    restart: always
    depends_on:
      webserver:
        condition: service_healthy
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/opt/airflow/requirements.txt
      - ./script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
    environment:
      - LOAD_EX=n
      - EXECUTOR=Sequential
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
    command: bash -c "pip install --no-cache-dir -r /opt/airflow/requirements.txt && airflow db upgrade && airflow scheduler"
    networks:
      - my_network

  spark-master:
    build:
      context: .
      dockerfile: Dockerfile.spark # Đường dẫn đến Dockerfile cho Spark
    user: root
    hostname: spark-master
    networks:
      - my_network
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - JAVA_HOME=/opt/bitnami/java
      - SPARK_MASTER_URL=spark://spark-master:7077 #Đường dẫn đến JAVA_HOME cho Spark
    volumes:
      - ./spark/app:/usr/local/spark/app
      - ./spark/resources:/usr/local/spark/resources
    ports:
      - "8181:8080" # Spark UI
      - "7077:7077" # Spark Master Port

  spark-worker-1:
    build:
      context: .
      dockerfile: Dockerfile.spark # Đường dẫn đến Dockerfile cho Spark
    user: root
    hostname: spark-worker-1
    networks:
      - my_network
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - JAVA_HOME=/opt/bitnami/java
        # Đường dẫn đến JAVA_HOME cho worker
    volumes:
      - ./spark/app:/usr/local/spark/app
      - ./spark/resources:/usr/local/spark/resources
    depends_on:
      - spark-master

  spark-worker-2:
    build:
      context: .
      dockerfile: Dockerfile.spark # Đường dẫn đến Dockerfile cho Spark
    user: root
    hostname: spark-worker-2
    networks:
      - my_network
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - JAVA_HOME=/opt/bitnami/java
    volumes:
      - ./spark/app:/usr/local/spark/app
      - ./spark/resources:/usr/local/spark/resources
    depends_on:
      - spark-master

  spark-worker-3:
    build:
      context: .
      dockerfile: Dockerfile.spark # Đường dẫn đến Dockerfile cho Spark
    user: root
    hostname: spark-worker-3
    networks:
      - my_network
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - JAVA_HOME=/opt/bitnami/java
    volumes:
      - ./spark/app:/usr/local/spark/app
      - ./spark/resources:/usr/local/spark/resources
    depends_on:
      - spark-master

  jupyter:
    image: jupyter/pyspark-notebook:spark-3.1.2
    networks:
      - my_network
    ports:
      - "8888:8888"
      - "4040-4080:4040-4080"
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - ./notebooks:/home/jovyan/work/notebooks
      - ./spark/resources/data:/home/jovyan/work/data/
      - ./spark/resources/jars:/home/jovyan/work/jars/
    depends_on:
      - spark-master
    command: "start.sh jupyter lab"

networks:
  my_network:
    driver: bridge
